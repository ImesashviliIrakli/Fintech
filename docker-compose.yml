version: '3.8'

services:

   rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
 
   seq:
    image: datalust/seq:latest
    container_name: seq
    hostname: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80

   identityservice:
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    container_name: identityservice
    restart: on-failure
    ports:
      - "5001:8080"
      - "5002:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION_STRING=Host=${POSTGRE_DB_HOST};Port=${POSTGRE_DB_PORT}; Database=${IDENTITY_SERVICE_DB_NAME}; Username=${POSTGRES_USER}; Password=${POSTGRES_PASSWORD}
      - ENCRYPTIONKEY=${ENCRYPTIONKEY}
      - ENCRYPTIONIV=${ENCRYPTIONIV}
   orderservice:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    container_name: orderservice
    restart: on-failure
    ports:
      - "5003:8080"
      - "5004:8081"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION_STRING=Host=${POSTGRE_DB_HOST};Port=${POSTGRE_DB_PORT};Database=${ORDER_SERVICE_DB_NAME};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RABBITMQ_QUEUE_NAME=${ORDER_SERVICE_QUEUE_NAME}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}

   paymentservice:
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    container_name: paymentservice
    restart: on-failure
    ports:
      - "5005:8080"
      - "5006:8081"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION_STRING=Host=${POSTGRE_DB_HOST};Port=${POSTGRE_DB_PORT};Database=${PAYMENT_SERVICE_DB_NAME};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}

   servicea:
    build:
      context: .
      dockerfile: ServiceA/Dockerfile
    container_name: servicea
    restart: on-failure
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

   serviceb:
    build:
      context: .
      dockerfile: ServiceB/Dockerfile
    container_name: serviceb
    restart: on-failure
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

volumes:
  pgdata: